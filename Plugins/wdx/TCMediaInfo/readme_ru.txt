TCMediaInfo 0.61 plugin for Total Commander
=========================================================

Описание плагина
----------------
TCMediaInfo - контентный плагин для извлечения информации из видео и аудио файлов. Плагин использует библиотеку MediaInfo и поддерживает все форматы, которые поддерживаются библиотекой. Полный список форматов смотрите здесь:

http://mediainfo.sourceforge.net/Support/Formats

Требования
----------
Плагин тестировался на Total Commander 7.x и Total Commander 7.55 под Windows XP Professional SP3 (x86), Vista SP1 и Windows 7 RTM (x86).

Установка
---------
Просто откройте wdx_tcmediainfo_xxx.zip в Total Commander для запуска автоматической установки.

Использование
-------------
Поскольку библиотека MediaInfo может извлекать множество информации, плагин сделан полностью настраиваемым и позволяет использовать практически любой параметр библиотеки MediaInfo. По-умолчанию несколько наиболее полезных параметров уже настроены в стандартной конфигурации. 
Конфигурирование колонок в Total Commander смотрите в документации на программу.

Конфигурация
------------
Если вам нужна дополнительная информация, которой нет в стандартной конфигурации, придется отредактировать файл TCMediaInfo.xml и добавить свои параметры. В файле allfields.txt находится полный список свойств библиотеки. Если вы обновляете библиотеку до новой версии, запустите saveprops.bat чтобы обновить файл списка.

В файле конфигурации вы можете увидеть четыре основных xml-узла.

Узел опций:
<options>
  <Formats>AVI,MKV,...</Formats>
  <MultiSeparator> / </MultiSeparator>
  <BasePath>base.db</BasePath>
  <UseBase>True</UseBase>
  <SqlitePath>sqlite3.dll</SqlitePath>
</options>

Formats - список поддерживаемых расширений, разделенных точкой с запятой.

MultiSeparator - строка, которой будут разделены несколько результатов в одном поле (например, список языков звуковых дорожек в фильме). 

BaseFile - путь к файлу базы. Можно использовать переменные окружения.

UseBase - установите в True если вы хотите использовать базу. База сделана в связи с медленной работой библиотеки MediaInfo для ускорения последующего получения данных.

SqlitePath - путь к библиотеке Sqlite3.dll. По-умолчанию плагин ищет ее в своем каталоге. Можно использовать переменные окружения.

Узел источников:
<sources>
  <source name="SourceName" field="MediaLibraryField" context="MediaLibraryFieldContext" stream="StreamNumber"/>
</sources>

Здесь вы задаете "источники" - информация, которая будет получена из библиотеки и (опционально) сохранена в базу. Каждый узел <source> может иметь атрибуты:

name="SourceName" - имя источника. Оно может содержать только латинские буквы, цифры и символ подчеркивания. Заданное имя будет являться именем поля для базы, и именем переменной для скриптов.

field="MediaLibraryField" - имя поля MediaLibrary (смотрите полный список доступных полей в allprops.txt)

context="MediaLibraryFieldContext" (опциональный) - поскольку многие поля возвращают свою информацию для для разных типов объектов (контейнер, видео, аудио, и т.д.), и некоторые работают только для определенных типов контента, вам нужно задавать, для какого типа (в каком контексте) будет получена информация. Контекст может быть General, Video, Audio, Text, Chapters, Image и Menu. Если контекст опущен, будет извлекаться информация в контексте General (обычно это контейнер или общая информация, например, теги).


stream="StreamNumber" (опциональный) - номер потока, для которого будет извлечена информация. Если вместо числа будет задано "*" - будет извлечена информация по всем доступным потокам в данном контексте (данные будут разделены строкой, заданной в параметре MultiSeparator).

Узел колонок:
<columns>
  <column name="ColumnName" coltype="ColumnOutputType">SourceName</column>
  <column name="ColumnName" type="template">SourceName1, SourceName2</column>
  <column name="ColumnName" type="list" list="ListName">SourceName</column>
  <column name="ColumnName" type="script">begin {script content here} end.</column>
  <column name="ColumnName" type="script">
  <![CDATA[
    begin 
      {script content here} 
    end.
  ]]>  
  </column>
</columns>

Здесь вы определяете колонки, как они будут видны в Total Commander. 

Каждый узел <column> может содержать атрибуты:

name="ColumnName" - имя колонки (обычно английское), как оно будет видно в Total Commander. 

type="<single|template|list|script>" - определяет, как будет трактоваться текст узла. Может быть:

"single" - текст узла является именем источника, 
"template" - шаблон, имена источников в тексте будут заменены их значениями, 
"list" - значение заданного источника будет искаться в списке с именем, заданном в атрибуте "list", (смотрите раздел "списки"), 
"script" - скрипт на Pascal Script (смотрите секцию "написание скриптов"). 

Если атрибут опущен, текст трактуется как простое имя источника.

Текст узла может быть взят в секцию CDATA, хотя это полезно только для многострочных скриптов.

Узел <column> также может содержать воложенные узлы <unit> (единицы). Они обрабатываются точно так же, как узлы <column> и имеют такие же атрибуты. Не исползуйте атрибут "type" в узле <column>, если вы используете единицы.

"coltype" (опционально) - тип колонки, в основно полезно для форматирования даты/времени. Поддерживаются типы ft_string, ft_numeric_32,  ft_numeric_32, ft_datetime. По-умолчанию используется ft_string.

Также вы можете поместить узел <separator/> между колонками, он будет виден как разделитель в меню Total Commander.

Узел списков:
<lists>
  <list name="ListName">
    <line name="SearchText">ReplaceText</line>
  </list>
  <list name="ListName" type="ini" file="{path to file, environment variables allowed}" section="{load from}"/>
</lists>

В этом узле располагаются списки замен.

name="ListName" - имя списка. Оно может содержать только латинские буквы, цифры и символ подчеркивания. Заданное имя может быть использовано в колонках типа "list", или скрипт может вызвать его по этому имени.

name="SearchText" - текст (идентификатор) для поиска

ReplaceText - найденный текст будет заменен этим текстом

type="ini" - список может быть загружен из внешнего ini-файла. Имя файла должно быть задано в атрибуте "file" (можно использовать переменные окружения). Также необходимо установить имя секции ini-файла в атрибуте "section". 


Написание скриптов

Написание скриптов позволяет полностью изменить вывод информации под ваши нужды.

В скриптах можно использовать любое из определенных имен источников, и специальную переменную "Output", значение которой будет выведено плагином. Все входные переменные и переменная "Output" имеют тип Variant. Это означает, что во многих случаях вы можете использовать ее значение без дополнительных преобразований типов. Обратите внимание, что когда вариант - строка, она на самом деле закодирована в UTF-8.

Вы можете использовать многие функции Паскаля в скриптах. {информация будет дополнена}

Также определена специальная функция для работы со списками:

GetListValue(List: string; ID: string; Default: string): string;

List - имя списка
ID - текст, который будет искаться
Default - стандартное значение, котрое будет возвращено в случае если текст не найден


Перевод
-------
Для перевода используйте стандартный механизм TC. Посмотрите содержимое файла TCMediaInfo.lng, его содержимое очевидно.


История версий
--------------
Version 0.6.2 (2011-02-06)
- Исправлено появление лишнего сообщения на пустой базе
+ Заново добавлена ANSI-версия
- Версия файла была недоступна под Windows 7
+ Возможность задать произвольный путь к базе.

Version 0.6.1 (2010-09-14)
- Кажется исправлен общий доступ к БД
+ Добавлена опция использования только сессионной БД в памяти

Version 0.6 (2010-08-22)
* Плагин полностью переписан
* Скриптовый движок заменен на Pascal Script
* Для хранения опций и определений используется XML
+ Значение колонки может быть собрано из нескольких источников
+ База для ускорения повторной загрузки (Sqlite3)
- Исправлена работа с последними версиями библиотеки

Version 0.51 (не выпускалась)
+ Поддержка списков замены
+ Плагин не использует DetectString, а проверяет расширения по списку, заданному в конфигурации
+ Добавлен стандартный конфиг, чтобы рабочий не перезаписывался при обновлении инсталлятором

Version 0.50 (2009-09-07)
  Первый релиз.


Благодарности
-------------
Christian Ghisler - за бесконечно мощный инструмент.
Команде MediaInfo - за отличную библиотеку.


Лицензия
--------
Copyright (c) 2009-2010 Dmitry Yudin

Плагин распространяется бесплатно. 

А лицензии у нас все равно никто не читает :)

